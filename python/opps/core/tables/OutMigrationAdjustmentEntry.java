// Generated by delombok at Mon Apr 01 15:56:10 UTC 2024
package gov.cms.fiss.pricers.opps.core.tables;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;
import gov.cms.fiss.pricers.opps.core.tables.OutMigrationAdjustmentEntry.Fields;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Comparator;
import javax.annotation.Nonnull;
import javax.annotation.concurrent.Immutable;
import javax.validation.constraints.Digits;

/**
 * Model for the OPPSOUTM CSV file.
 */
@Immutable
@JsonDeserialize(builder = OutMigrationAdjustmentEntry.OutMigrationAdjustmentEntryBuilder.class)
@JsonPropertyOrder({Fields.COUNTY, Fields.ADJUSTMENT_FACTOR, Fields.EFFECTIVE_DATE})
public class OutMigrationAdjustmentEntry implements Comparable<OutMigrationAdjustmentEntry> {

  @JsonPOJOBuilder(withPrefix = "")
  public static class OutMigrationAdjustmentEntryBuilder {
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    private Integer county;
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    private BigDecimal adjustmentFactor;
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    private LocalDate effectiveDate;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    OutMigrationAdjustmentEntryBuilder() {
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public OutMigrationAdjustmentEntry.OutMigrationAdjustmentEntryBuilder county(final Integer county) {
      this.county = county;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public OutMigrationAdjustmentEntry.OutMigrationAdjustmentEntryBuilder adjustmentFactor(final BigDecimal adjustmentFactor) {
      this.adjustmentFactor = adjustmentFactor;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyyMMdd")
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public OutMigrationAdjustmentEntry.OutMigrationAdjustmentEntryBuilder effectiveDate(final LocalDate effectiveDate) {
      this.effectiveDate = effectiveDate;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public OutMigrationAdjustmentEntry build() {
      return new OutMigrationAdjustmentEntry(this.county, this.adjustmentFactor, this.effectiveDate);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
      return "OutMigrationAdjustmentEntry.OutMigrationAdjustmentEntryBuilder(county=" + this.county + ", adjustmentFactor=" + this.adjustmentFactor + ", effectiveDate=" + this.effectiveDate + ")";
    }
  }

  @Digits(integer = 5, fraction = 0)
  private final Integer county;
  @Digits(integer = 1, fraction = 4)
  private final BigDecimal adjustmentFactor;
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyyMMdd")
  private final LocalDate effectiveDate;

  @Override
  public int compareTo(@Nonnull OutMigrationAdjustmentEntry other) {
    return Comparator.comparing(OutMigrationAdjustmentEntry::getCounty).thenComparing(OutMigrationAdjustmentEntry::getEffectiveDate).compare(this, other);
  }

  public OutMigrationAdjustmentEntryBuilder copyBuilder() {
    return OutMigrationAdjustmentEntry.builder().county(getCounty()).adjustmentFactor(getAdjustmentFactor()).effectiveDate(getEffectiveDate());
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  OutMigrationAdjustmentEntry(final Integer county, final BigDecimal adjustmentFactor, final LocalDate effectiveDate) {
    this.county = county;
    this.adjustmentFactor = adjustmentFactor;
    this.effectiveDate = effectiveDate;
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public static OutMigrationAdjustmentEntry.OutMigrationAdjustmentEntryBuilder builder() {
    return new OutMigrationAdjustmentEntry.OutMigrationAdjustmentEntryBuilder();
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public Integer getCounty() {
    return this.county;
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public BigDecimal getAdjustmentFactor() {
    return this.adjustmentFactor;
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public LocalDate getEffectiveDate() {
    return this.effectiveDate;
  }


  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public static final class Fields {
    public static final java.lang.String COUNTY = "county";
    public static final java.lang.String ADJUSTMENT_FACTOR = "adjustmentFactor";
    public static final java.lang.String EFFECTIVE_DATE = "effectiveDate";
  }
}
