// Generated by delombok at Mon Apr 01 15:56:10 UTC 2024
package gov.cms.fiss.pricers.opps;

import com.fasterxml.jackson.annotation.JsonProperty;
import gov.cms.fiss.pricers.common.application.OpenApiApplicationConfiguration;
import gov.cms.fiss.pricers.common.csv.CsvIngestionConfiguration;

public class OppsPricerConfiguration extends OpenApiApplicationConfiguration {
  @JsonProperty("csv")
  private CsvIngestionConfiguration csvIngestionConfiguration = new CsvIngestionConfiguration();
  /**
   * Overrides the default file name for the previous year wage index file.
   */
  private String previousYearWageIndexOverride;

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public OppsPricerConfiguration() {
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public CsvIngestionConfiguration getCsvIngestionConfiguration() {
    return this.csvIngestionConfiguration;
  }

  /**
   * Overrides the default file name for the previous year wage index file.
   */
  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public String getPreviousYearWageIndexOverride() {
    return this.previousYearWageIndexOverride;
  }

  @JsonProperty("csv")
  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public void setCsvIngestionConfiguration(final CsvIngestionConfiguration csvIngestionConfiguration) {
    this.csvIngestionConfiguration = csvIngestionConfiguration;
  }

  /**
   * Overrides the default file name for the previous year wage index file.
   */
  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public void setPreviousYearWageIndexOverride(final String previousYearWageIndexOverride) {
    this.previousYearWageIndexOverride = previousYearWageIndexOverride;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof OppsPricerConfiguration)) return false;
    final OppsPricerConfiguration other = (OppsPricerConfiguration) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    if (!super.equals(o)) return false;
    final java.lang.Object this$csvIngestionConfiguration = this.getCsvIngestionConfiguration();
    final java.lang.Object other$csvIngestionConfiguration = other.getCsvIngestionConfiguration();
    if (this$csvIngestionConfiguration == null ? other$csvIngestionConfiguration != null : !this$csvIngestionConfiguration.equals(other$csvIngestionConfiguration)) return false;
    final java.lang.Object this$previousYearWageIndexOverride = this.getPreviousYearWageIndexOverride();
    final java.lang.Object other$previousYearWageIndexOverride = other.getPreviousYearWageIndexOverride();
    if (this$previousYearWageIndexOverride == null ? other$previousYearWageIndexOverride != null : !this$previousYearWageIndexOverride.equals(other$previousYearWageIndexOverride)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof OppsPricerConfiguration;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = super.hashCode();
    final java.lang.Object $csvIngestionConfiguration = this.getCsvIngestionConfiguration();
    result = result * PRIME + ($csvIngestionConfiguration == null ? 43 : $csvIngestionConfiguration.hashCode());
    final java.lang.Object $previousYearWageIndexOverride = this.getPreviousYearWageIndexOverride();
    result = result * PRIME + ($previousYearWageIndexOverride == null ? 43 : $previousYearWageIndexOverride.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public java.lang.String toString() {
    return "OppsPricerConfiguration(csvIngestionConfiguration=" + this.getCsvIngestionConfiguration() + ", previousYearWageIndexOverride=" + this.getPreviousYearWageIndexOverride() + ")";
  }
}
